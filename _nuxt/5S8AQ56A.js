import{R as t,v as a,r as e,fi as o,bS as s,bN as n,fj as u,a0 as r,fk as i,cv as m,fl as c,fm as l,fn as d,fo as p,fp as f,fq as h,fr as _,fs as k,ft as y}from"#entry";import{a as w,b}from"./BUyr3k23.js";function T(){const T=t(),{t:v}=a(),g=e(!1);async function S(t,a){try{g.value=!0;await t.swapCallStatic();const e=t.swapInfo,o=(e.fromToken.isWrapper&&e.toToken.isETH||e.toToken.isWrapper&&e.fromToken.isETH,{from_address:e.fromToken.address,from_symbol:e.fromToken.symbol,from_amount:Number(_(e.fromTokenAmount||0,e.fromToken.decimals)),to_address:e.toToken.address,to_symbol:e.toToken.symbol,to_amount:Number(_(e.toTokenAmount||0,e.toToken.decimals)),chain:a,transaction:"",wallet_address:T.address});let n=null;t.swap().then(t=>(n=setTimeout(()=>{s({type:"success",message:v("transactionsSubmitted")})},500),w({chain:a,destination:"wallet rpc",type:10,tx_hash:t.hash,status:1,wallet:T.address,out_token:o.to_address,out_amount:Number(_(e.toTokenAmount||0,e.toToken.decimals)),in_token:o.from_address,in_amount:Number(_(e.fromTokenAmount||0,e.fromToken.decimals))}),g.value=!1,t.wait())).then(t=>(n&&(clearTimeout(n),n=null),s({type:"success",message:v("tradeSuccess")}),b({chain:a,tx_hash:t.hash,status:100,to:t?.to?.toLowerCase?.()||""}),t)).catch(t=>{g.value=!1,l(t,"swap")})}catch(e){g.value=!1,l(e,"swap")}}return{walletSwap:async function(t,a){if(!Object.keys(o)?.includes?.(a.chain)&&"solana"!==a.chain)return void s({title:"Error",type:"error",message:v("noSupportChain",{chain:n(a.chain).name})});if(a.chain!==T.chain)return void s({title:"Error",type:"error",message:v("chainNotSame1")});g.value=!0;let e=await function(t){return y({tokenAddress:"solana"===t?"So11111111111111111111111111111111111111112":m,chain:t})}(a.chain).catch(()=>({balance:"0"}));if(e?.balance<t||0===Number(e?.balance))return s({title:"Error",type:"error",message:v("insufficientBalance")}),void(g.value=!1);const x=a.chain,A=a.token,F=a.amm,M=F?.includes("fourmeme");if(Number(t)>0){const e=n(x).decimals;if("solana"===x)return void async function(t,a){const e=t.chain;if("solana"===e){g.value=!0;const e=await f(t.token);let o=!1;const n=!1,i=9,m=e?.token_decimals,c={inputMint:"So11111111111111111111111111111111111111112",inputDecimals:i,inputMintSymbol:"SOL",inputMintName:"SOL",inputAmount:a||0,outputMint:t.token,outputDecimals:m,outputMintSymbol:e.token_symbol,outputMintName:e.token_symbol,amount:u(new r(a||0).toFixed().match(new RegExp(`[0-9]*(\\.[0-9]{0,${i}})?`))?.[0]||0,i).toFixed(0),slippageBps:new r(30).times(100).toFixed(0),swapMode:"ExactIn",slippage:30,isPump:o,isMoonshot:n};g.value=!0;let d={};h(c).then(t=>{let a="0";return t.routeInfo&&t.transaction?(d=t,a=t.routeInfo?.amountOut?.amount?.toFixed()||"0"):t.outAmount?(d=t,a=_(t.outAmount||"0",m)):l("can not get quote"),async function(t,a){try{g.value=!0;const e={from_address:a.inputMint,from_symbol:a.inputDecimals,from_amount:a.inputAmount,to_address:a.outputMint,to_symbol:a.outputDecimals,to_amount:a.toAmount,chain:"solana",transaction:"",wallet_address:T.address};let o=null;k(t).then(t=>(g.value=!1,o=setTimeout(()=>{s({type:"success",message:v("transactionsSubmitted")})},500),w({chain:"solana",destination:"true"===localStorage.solanaProtection?"v1/blxrsol/sendSolTx":"/ave_nodes/rpc/solana/sendFastSwapTx",type:10,tx_hash:t.hash,status:1,wallet:T.address,out_token:e.to_address,out_amount:a.toAmount,in_token:e.from_address,in_amount:a.fromAmount}),t.wait())).then(t=>(o&&(clearTimeout(o),o=null),s({type:"success",message:v("tradeSuccess")}),t&&b({chain:"solana",tx_hash:t?.transaction?.signatures[0],status:100}),t)).catch(t=>{"Timeout"===(t||t?.message)?s({type:"error",message:v("timeout_error")}):"Swap fail"===(t||t?.message)?s({type:"error",message:v("swapFail")}):l(t,"solana"),g.value=!1})}catch(e){g.value=!1,l(e,"solana")}}(d,{...c,toAmount:a}),t}).catch(t=>(g.value=!1,l(t?.error||t),Promise.resolve("")))}}(a,t);g.value=!0;const o={from_token:m,to_token:A,amountIn:u(new r(t||0).toFixed().match(new RegExp(`[0-9]*(\\.[0-9]{0,${e}})?`))?.[0]||0,e).toFixed(0),amountOut:"0"};if(M){try{const e=await i(o,x);c({fromAmount:u(t,18).toFixed(0),fromToken:{address:m,decimals:18,symbol:"BNB",amount:u(t,18).toFixed(0)},toToken:{address:a.token,decimals:18,symbol:"",amount:e?.amountOut||"0"},isAmountOut:!1,quoteResult:{...e}},10).then(async t=>{S({...t,isFourMeme:!0},a.chain)}).catch(t=>{l(t)}),g.value=!1}catch(N){g.value=!1,l(N)}return}d(o,"",x).then(t=>{const a=t[0];p(a,30).then(async t=>{S(t,x)}).catch(t=>{l(t)})}).catch(t=>{l(t)})}},loadingWalletSwap:g}}export{T as u};
