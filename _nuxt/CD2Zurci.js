import{ox as t,oy as e,oz as r,oA as n,oB as o,oC as i,oD as s,oE as f,oF as c,oG as a}from"#entry";
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const u=BigInt(0),l=BigInt(1);function d(t,e=""){if("boolean"!=typeof t){throw new Error((e&&`"${e}"`)+"expected boolean, got type="+typeof t)}return t}function h(t,r,n=""){const o=e(t),i=t?.length,s=void 0!==r;if(!o||s&&i!==r){throw new Error((n&&`"${n}" `)+"expected Uint8Array"+(s?` of length ${r}`:"")+", got "+(o?`length=${i}`:"type="+typeof t))}return t}function w(t){const e=t.toString(16);return 1&e.length?"0"+e:e}function g(t){if("string"!=typeof t)throw new Error("hex string expected, got "+typeof t);return""===t?u:BigInt("0x"+t)}function m(e){return g(t(e))}function y(e){return n(e),g(t(Uint8Array.from(e).reverse()))}function p(t,e){return r(t.toString(16).padStart(2*e,"0"))}function E(t,e){return p(t,e).reverse()}function b(t,n,o){let i;if("string"==typeof n)try{i=r(n)}catch(s){throw new Error(t+" must be hex string or Uint8Array, cause: "+s)}else{if(!e(n))throw new Error(t+" must be hex string or Uint8Array");i=Uint8Array.from(n)}return i.length,i}const B=t=>"bigint"==typeof t&&u<=t;function v(t,e,r,n){if(!function(t,e,r){return B(t)&&B(e)&&B(r)&&e<=t&&t<r}(e,r,n))throw new Error("expected valid "+t+": "+r+" <= n < "+n+", got "+e)}function O(t){let e;for(e=0;t>u;t>>=l,e+=1);return e}const x=t=>(l<<BigInt(t))-l;function R(t,e,r={}){if(!t||"object"!=typeof t)throw new Error("expected valid options object");function n(e,r,n){const o=t[e];if(n&&void 0===o)return;const i=typeof o;if(i!==r||null===o)throw new Error(`param "${e}" is invalid: expected ${r}, got ${i}`)}Object.entries(e).forEach(([t,e])=>n(t,e,!1)),Object.entries(r).forEach(([t,e])=>n(t,e,!0))}function S(t){const e=new WeakMap;return(r,...n)=>{const o=e.get(r);if(void 0!==o)return o;const i=t(r,...n);return e.set(r,i),i}}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const I=BigInt(0),N=BigInt(1),q=BigInt(2),F=BigInt(3),A=BigInt(4),Z=BigInt(5),U=BigInt(7),V=BigInt(8),K=BigInt(9),P=BigInt(16);function C(t,e){const r=t%e;return r>=I?r:e+r}function k(t,e,r){let n=t;for(;e-- >I;)n*=n,n%=r;return n}function T(t,e){if(t===I)throw new Error("invert: expected non-zero number");if(e<=I)throw new Error("invert: expected positive modulus, got "+e);let r=C(t,e),n=e,o=I,i=N;for(;r!==I;){const t=n%r,e=o-i*(n/r);n=r,r=t,o=i,i=e}if(n!==N)throw new Error("invert: does not exist");return C(o,e)}function j(t,e,r){if(!t.eql(t.sqr(e),r))throw new Error("Cannot find square root")}function D(t,e){const r=(t.ORDER+N)/A,n=t.pow(e,r);return j(t,n,e),n}function z(t,e){const r=(t.ORDER-Z)/V,n=t.mul(e,q),o=t.pow(n,r),i=t.mul(e,o),s=t.mul(t.mul(i,q),o),f=t.mul(i,t.sub(s,t.ONE));return j(t,f,e),f}function L(t){if(t<F)throw new Error("sqrt is not defined for small field");let e=t-N,r=0;for(;e%q===I;)e/=q,r++;let n=q;const o=_(t);for(;1===M(o,n);)if(n++>1e3)throw new Error("Cannot find square root: probably non-prime P");if(1===r)return D;let i=o.pow(n,e);const s=(e+N)/q;return function(t,n){if(t.is0(n))return n;if(1!==M(t,n))throw new Error("Cannot find square root");let o=r,f=t.mul(t.ONE,i),c=t.pow(n,e),a=t.pow(n,s);for(;!t.eql(c,t.ONE);){if(t.is0(c))return t.ZERO;let e=1,r=t.sqr(c);for(;!t.eql(r,t.ONE);)if(e++,r=t.sqr(r),e===o)throw new Error("Cannot find square root");const n=N<<BigInt(o-e-1),i=t.pow(f,n);o=e,f=t.sqr(i),c=t.mul(c,f),a=t.mul(a,i)}return a}}function Y(t){return t%A===F?D:t%V===Z?z:t%P===K?function(t){const e=_(t),r=L(t),n=r(e,e.neg(e.ONE)),o=r(e,n),i=r(e,e.neg(n)),s=(t+U)/P;return(t,e)=>{let r=t.pow(e,s),f=t.mul(r,n);const c=t.mul(r,o),a=t.mul(r,i),u=t.eql(t.sqr(f),e),l=t.eql(t.sqr(c),e);r=t.cmov(r,f,u),f=t.cmov(a,c,l);const d=t.eql(t.sqr(f),e),h=t.cmov(r,f,d);return j(t,h,e),h}}(t):L(t)}const $=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function H(t,e,r=!1){const n=new Array(e.length).fill(r?t.ZERO:void 0),o=e.reduce((e,r,o)=>t.is0(r)?e:(n[o]=e,t.mul(e,r)),t.ONE),i=t.inv(o);return e.reduceRight((e,r,o)=>t.is0(r)?e:(n[o]=t.mul(e,n[o]),t.mul(e,r)),i),n}function M(t,e){const r=(t.ORDER-N)/q,n=t.pow(e,r),o=t.eql(n,t.ONE),i=t.eql(n,t.ZERO),s=t.eql(n,t.neg(t.ONE));if(!o&&!i&&!s)throw new Error("invalid Legendre symbol result");return o?1:i?0:-1}function G(t,e){void 0!==e&&i(e);const r=void 0!==e?e:t.toString(2).length;return{nBitLength:r,nByteLength:Math.ceil(r/8)}}function _(t,e,r=!1,n={}){if(t<=I)throw new Error("invalid field: expected ORDER > 0, got "+t);let o,i,s,f=!1;if("object"==typeof e&&null!=e){if(n.sqrt||r)throw new Error("cannot specify opts in two arguments");const t=e;t.BITS&&(o=t.BITS),t.sqrt&&(i=t.sqrt),"boolean"==typeof t.isLE&&(r=t.isLE),"boolean"==typeof t.modFromBytes&&(f=t.modFromBytes),s=t.allowedLengths}else"number"==typeof e&&(o=e),n.sqrt&&(i=n.sqrt);const{nBitLength:c,nByteLength:a}=G(t,o);if(a>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let u;const l=Object.freeze({ORDER:t,isLE:r,BITS:c,BYTES:a,MASK:x(c),ZERO:I,ONE:N,allowedLengths:s,create:e=>C(e,t),isValid:e=>{if("bigint"!=typeof e)throw new Error("invalid field element: expected bigint, got "+typeof e);return I<=e&&e<t},is0:t=>t===I,isValidNot0:t=>!l.is0(t)&&l.isValid(t),isOdd:t=>(t&N)===N,neg:e=>C(-e,t),eql:(t,e)=>t===e,sqr:e=>C(e*e,t),add:(e,r)=>C(e+r,t),sub:(e,r)=>C(e-r,t),mul:(e,r)=>C(e*r,t),pow:(t,e)=>function(t,e,r){if(r<I)throw new Error("invalid exponent, negatives unsupported");if(r===I)return t.ONE;if(r===N)return e;let n=t.ONE,o=e;for(;r>I;)r&N&&(n=t.mul(n,o)),o=t.sqr(o),r>>=N;return n}(l,t,e),div:(e,r)=>C(e*T(r,t),t),sqrN:t=>t*t,addN:(t,e)=>t+e,subN:(t,e)=>t-e,mulN:(t,e)=>t*e,inv:e=>T(e,t),sqrt:i||(e=>(u||(u=Y(t)),u(l,e))),toBytes:t=>r?E(t,a):p(t,a),fromBytes:(e,n=!0)=>{if(s){if(!s.includes(e.length)||e.length>a)throw new Error("Field.fromBytes: expected "+s+" bytes, got "+e.length);const t=new Uint8Array(a);t.set(e,r?0:t.length-e.length),e=t}if(e.length!==a)throw new Error("Field.fromBytes: expected "+a+" bytes, got "+e.length);let o=r?y(e):m(e);if(f&&(o=C(o,t)),!n&&!l.isValid(o))throw new Error("invalid field element: outside of range 0..ORDER");return o},invertBatch:t=>H(l,t),cmov:(t,e,r)=>r?e:t});return Object.freeze(l)}function X(t){if("bigint"!=typeof t)throw new Error("field order must be bigint");const e=t.toString(2).length;return Math.ceil(e/8)}function W(t){const e=X(t);return e+Math.ceil(e/2)}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const J=BigInt(0),Q=BigInt(1);function tt(t,e){const r=e.negate();return t?r:e}function et(t,e){const r=H(t.Fp,e.map(t=>t.Z));return e.map((e,n)=>t.fromAffine(e.toAffine(r[n])))}function rt(t,e){if(!Number.isSafeInteger(t)||t<=0||t>e)throw new Error("invalid window size, expected [1.."+e+"], got W="+t)}function nt(t,e){rt(t,e);const r=2**t;return{windows:Math.ceil(e/t)+1,windowSize:2**(t-1),mask:x(t),maxNumber:r,shiftBy:BigInt(t)}}function ot(t,e,r){const{windowSize:n,mask:o,maxNumber:i,shiftBy:s}=r;let f=Number(t&o),c=t>>s;f>n&&(f-=i,c+=Q);const a=e*n;return{nextN:c,offset:a+Math.abs(f)-1,isZero:0===f,isNeg:f<0,isNegF:e%2!=0,offsetF:a}}const it=new WeakMap,st=new WeakMap;function ft(t){return st.get(t)||1}function ct(t){if(t!==J)throw new Error("invalid wNAF")}class at{constructor(t,e){this.BASE=t.BASE,this.ZERO=t.ZERO,this.Fn=t.Fn,this.bits=e}_unsafeLadder(t,e,r=this.ZERO){let n=t;for(;e>J;)e&Q&&(r=r.add(n)),n=n.double(),e>>=Q;return r}precomputeWindow(t,e){const{windows:r,windowSize:n}=nt(e,this.bits),o=[];let i=t,s=i;for(let f=0;f<r;f++){s=i,o.push(s);for(let t=1;t<n;t++)s=s.add(i),o.push(s);i=s.double()}return o}wNAF(t,e,r){if(!this.Fn.isValid(r))throw new Error("invalid scalar");let n=this.ZERO,o=this.BASE;const i=nt(t,this.bits);for(let s=0;s<i.windows;s++){const{nextN:t,offset:f,isZero:c,isNeg:a,isNegF:u,offsetF:l}=ot(r,s,i);r=t,c?o=o.add(tt(u,e[l])):n=n.add(tt(a,e[f]))}return ct(r),{p:n,f:o}}wNAFUnsafe(t,e,r,n=this.ZERO){const o=nt(t,this.bits);for(let i=0;i<o.windows&&r!==J;i++){const{nextN:t,offset:s,isZero:f,isNeg:c}=ot(r,i,o);if(r=t,!f){const t=e[s];n=n.add(c?t.negate():t)}}return ct(r),n}getPrecomputes(t,e,r){let n=it.get(e);return n||(n=this.precomputeWindow(e,t),1!==t&&("function"==typeof r&&(n=r(n)),it.set(e,n))),n}cached(t,e,r){const n=ft(t);return this.wNAF(n,this.getPrecomputes(n,t,r),e)}unsafe(t,e,r,n){const o=ft(t);return 1===o?this._unsafeLadder(t,e,n):this.wNAFUnsafe(o,this.getPrecomputes(o,t,r),e,n)}createCache(t,e){rt(e,this.bits),st.set(t,e),it.delete(t)}hasCache(t){return 1!==ft(t)}}function ut(t,e,r,n){!function(t,e){if(!Array.isArray(t))throw new Error("array expected");t.forEach((t,r)=>{if(!(t instanceof e))throw new Error("invalid point at index "+r)})}(r,t),function(t,e){if(!Array.isArray(t))throw new Error("array of scalars expected");t.forEach((t,r)=>{if(!e.isValid(t))throw new Error("invalid scalar at index "+r)})}(n,e);const o=r.length,i=n.length;if(o!==i)throw new Error("arrays of points and scalars must have equal length");const s=t.ZERO,f=O(BigInt(o));let c=1;f>12?c=f-3:f>4?c=f-2:f>0&&(c=2);const a=x(c),u=new Array(Number(a)+1).fill(s);let l=s;for(let d=Math.floor((e.BITS-1)/c)*c;d>=0;d-=c){u.fill(s);for(let e=0;e<i;e++){const t=n[e],o=Number(t>>BigInt(d)&a);u[o]=u[o].add(r[e])}let t=s;for(let e=u.length-1,r=s;e>0;e--)r=r.add(u[e]),t=t.add(r);if(l=l.add(t),0!==d)for(let e=0;e<c;e++)l=l.double()}return l}function lt(t,e,r){if(e){if(e.ORDER!==t)throw new Error("Field.ORDER must match order: Fp == p, Fn == n");return function(t){R(t,$.reduce((t,e)=>(t[e]="function",t),{ORDER:"bigint",MASK:"bigint",BYTES:"number",BITS:"number"}))}(e),e}return _(t,{isLE:r})}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const dt=(t,e)=>(t+(t>=0?e:-e)/Et)/e;function ht(t){if(!["compact","recovered","der"].includes(t))throw new Error('Signature format must be "compact", "recovered", or "der"');return t}function wt(t,e){const r={};for(let n of Object.keys(e))r[n]=void 0===t[n]?e[n]:t[n];return d(r.lowS,"lowS"),d(r.prehash,"prehash"),void 0!==r.format&&ht(r.format),r}class gt extends Error{constructor(t=""){super(t)}}const mt={Err:gt,_tlv:{encode:(t,e)=>{const{Err:r}=mt;if(t<0||t>256)throw new r("tlv.encode: wrong tag");if(1&e.length)throw new r("tlv.encode: unpadded data");const n=e.length/2,o=w(n);if(o.length/2&128)throw new r("tlv.encode: long form length too big");const i=n>127?w(o.length/2|128):"";return w(t)+i+o+e},decode(t,e){const{Err:r}=mt;let n=0;if(t<0||t>256)throw new r("tlv.encode: wrong tag");if(e.length<2||e[n++]!==t)throw new r("tlv.decode: wrong tlv");const o=e[n++];let i=0;if(!!(128&o)){const t=127&o;if(!t)throw new r("tlv.decode(long): indefinite length not supported");if(t>4)throw new r("tlv.decode(long): byte length is too big");const s=e.subarray(n,n+t);if(s.length!==t)throw new r("tlv.decode: length bytes not complete");if(0===s[0])throw new r("tlv.decode(long): zero leftmost byte");for(const e of s)i=i<<8|e;if(n+=t,i<128)throw new r("tlv.decode(long): not minimal encoding")}else i=o;const s=e.subarray(n,n+i);if(s.length!==i)throw new r("tlv.decode: wrong value length");return{v:s,l:e.subarray(n+i)}}},_int:{encode(t){const{Err:e}=mt;if(t<yt)throw new e("integer: negative integers are not allowed");let r=w(t);if(8&Number.parseInt(r[0],16)&&(r="00"+r),1&r.length)throw new e("unexpected DER parsing assertion: unpadded hex");return r},decode(t){const{Err:e}=mt;if(128&t[0])throw new e("invalid signature integer: negative");if(0===t[0]&&!(128&t[1]))throw new e("invalid signature integer: unnecessary leading zero");return m(t)}},toSig(t){const{Err:e,_int:r,_tlv:n}=mt,o=b("signature",t),{v:i,l:s}=n.decode(48,o);if(s.length)throw new e("invalid signature: left bytes after parsing");const{v:f,l:c}=n.decode(2,i),{v:a,l:u}=n.decode(2,c);if(u.length)throw new e("invalid signature: left bytes after parsing");return{r:r.decode(f),s:r.decode(a)}},hexFromSig(t){const{_tlv:e,_int:r}=mt,n=e.encode(2,r.encode(t.r))+e.encode(2,r.encode(t.s));return e.encode(48,n)}},yt=BigInt(0),pt=BigInt(1),Et=BigInt(2),bt=BigInt(3),Bt=BigInt(4);function vt(t,e){const{BYTES:r}=t;let n;if("bigint"==typeof e)n=e;else{let i=b("private key",e);try{n=t.fromBytes(i)}catch(o){throw new Error(`invalid private key: expected ui8a of size ${r}, got ${typeof e}`)}}if(!t.isValidNot0(n))throw new Error("invalid private key: out of range [1..N-1]");return n}function Ot(e,r={}){const n=function(t,e,r={},n){if(void 0===n&&(n="edwards"===t),!e||"object"!=typeof e)throw new Error(`expected valid ${t} CURVE object`);for(const f of["p","n","h"]){const t=e[f];if(!("bigint"==typeof t&&t>J))throw new Error(`CURVE.${f} must be positive bigint`)}const o=lt(e.p,r.Fp,n),i=lt(e.n,r.Fn,n),s=["Gx","Gy","a","b"];for(const f of s)if(!o.isValid(e[f]))throw new Error(`CURVE.${f} must be valid field element of CURVE.Fp`);return{CURVE:e=Object.freeze(Object.assign({},e)),Fp:o,Fn:i}}("weierstrass",e,r),{Fp:i,Fn:s}=n;let f=n.CURVE;const{h:c,n:a}=f;R(r,{},{allowInfinityPoint:"boolean",clearCofactor:"function",isTorsionFree:"function",fromBytes:"function",toBytes:"function",endo:"object",wrapPrivateKey:"boolean"});const{endo:u}=r;if(u&&(!i.is0(f.a)||"bigint"!=typeof u.beta||!Array.isArray(u.basises)))throw new Error('invalid endo: expected "beta": bigint and "basises": array');const l=Rt(i,s);function w(){if(!i.isOdd)throw new Error("compression is not supported: Field does not have .isOdd()")}const g=r.toBytes||function(t,e,r){const{x:n,y:s}=e.toAffine(),f=i.toBytes(n);if(d(r,"isCompressed"),r){w();const t=!i.isOdd(s);return o(xt(t),f)}return o(Uint8Array.of(4),f,i.toBytes(s))},m=r.fromBytes||function(t){h(t,void 0,"Point");const{publicKey:e,publicKeyUncompressed:r}=l,n=t.length,o=t[0],s=t.subarray(1);if(n!==e||2!==o&&3!==o){if(n===r&&4===o){const t=i.BYTES,e=i.fromBytes(s.subarray(0,t)),r=i.fromBytes(s.subarray(t,2*t));if(!p(e,r))throw new Error("bad point: is not on curve");return{x:e,y:r}}throw new Error(`bad point: got length ${n}, expected compressed=${e} or uncompressed=${r}`)}{const t=i.fromBytes(s);if(!i.isValid(t))throw new Error("bad point: is not on curve, wrong x");const e=y(t);let r;try{r=i.sqrt(e)}catch(f){const t=f instanceof Error?": "+f.message:"";throw new Error("bad point: is not on curve, sqrt error"+t)}w();return!(1&~o)!==i.isOdd(r)&&(r=i.neg(r)),{x:t,y:r}}};function y(t){const e=i.sqr(t),r=i.mul(e,t);return i.add(i.add(r,i.mul(t,f.a)),f.b)}function p(t,e){const r=i.sqr(e),n=y(t);return i.eql(r,n)}if(!p(f.Gx,f.Gy))throw new Error("bad curve params: generator point");const E=i.mul(i.pow(f.a,bt),Bt),B=i.mul(i.sqr(f.b),BigInt(27));if(i.is0(i.add(E,B)))throw new Error("bad curve params: a or b");function v(t,e,r=!1){if(!i.isValid(e)||r&&i.is0(e))throw new Error(`bad point coordinate ${t}`);return e}function I(t){if(!(t instanceof Z))throw new Error("ProjectivePoint expected")}function N(t){if(!u||!u.basises)throw new Error("no endo");return function(t,e,r){const[[n,o],[i,s]]=e,f=dt(s*t,r),c=dt(-o*t,r);let a=t-f*n-c*i,u=-f*o-c*s;const l=a<yt,d=u<yt;l&&(a=-a),d&&(u=-u);const h=x(Math.ceil(O(r)/2))+pt;if(a<yt||a>=h||u<yt||u>=h)throw new Error("splitScalar (endomorphism): failed, k="+t);return{k1neg:l,k1:a,k2neg:d,k2:u}}(t,u.basises,s.ORDER)}const q=S((t,e)=>{const{X:r,Y:n,Z:o}=t;if(i.eql(o,i.ONE))return{x:r,y:n};const s=t.is0();null==e&&(e=s?i.ONE:i.inv(o));const f=i.mul(r,e),c=i.mul(n,e),a=i.mul(o,e);if(s)return{x:i.ZERO,y:i.ZERO};if(!i.eql(a,i.ONE))throw new Error("invZ was invalid");return{x:f,y:c}}),F=S(t=>{if(t.is0()){if(r.allowInfinityPoint&&!i.is0(t.Y))return;throw new Error("bad point: ZERO")}const{x:e,y:n}=t.toAffine();if(!i.isValid(e)||!i.isValid(n))throw new Error("bad point: x or y not field elements");if(!p(e,n))throw new Error("bad point: equation left != right");if(!t.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});function A(t,e,r,n,o){return r=new Z(i.mul(r.X,t),r.Y,r.Z),e=tt(n,e),r=tt(o,r),e.add(r)}class Z{constructor(t,e,r){this.X=v("x",t),this.Y=v("y",e,!0),this.Z=v("z",r),Object.freeze(this)}static CURVE(){return f}static fromAffine(t){const{x:e,y:r}=t||{};if(!t||!i.isValid(e)||!i.isValid(r))throw new Error("invalid affine point");if(t instanceof Z)throw new Error("projective point not allowed");return i.is0(e)&&i.is0(r)?Z.ZERO:new Z(e,r,i.ONE)}static fromBytes(t){const e=Z.fromAffine(m(h(t,void 0,"point")));return e.assertValidity(),e}static fromHex(t){return Z.fromBytes(b("pointHex",t))}get x(){return this.toAffine().x}get y(){return this.toAffine().y}precompute(t=8,e=!0){return V.createCache(this,t),e||this.multiply(bt),this}assertValidity(){F(this)}hasEvenY(){const{y:t}=this.toAffine();if(!i.isOdd)throw new Error("Field doesn't support isOdd");return!i.isOdd(t)}equals(t){I(t);const{X:e,Y:r,Z:n}=this,{X:o,Y:s,Z:f}=t,c=i.eql(i.mul(e,f),i.mul(o,n)),a=i.eql(i.mul(r,f),i.mul(s,n));return c&&a}negate(){return new Z(this.X,i.neg(this.Y),this.Z)}double(){const{a:t,b:e}=f,r=i.mul(e,bt),{X:n,Y:o,Z:s}=this;let c=i.ZERO,a=i.ZERO,u=i.ZERO,l=i.mul(n,n),d=i.mul(o,o),h=i.mul(s,s),w=i.mul(n,o);return w=i.add(w,w),u=i.mul(n,s),u=i.add(u,u),c=i.mul(t,u),a=i.mul(r,h),a=i.add(c,a),c=i.sub(d,a),a=i.add(d,a),a=i.mul(c,a),c=i.mul(w,c),u=i.mul(r,u),h=i.mul(t,h),w=i.sub(l,h),w=i.mul(t,w),w=i.add(w,u),u=i.add(l,l),l=i.add(u,l),l=i.add(l,h),l=i.mul(l,w),a=i.add(a,l),h=i.mul(o,s),h=i.add(h,h),l=i.mul(h,w),c=i.sub(c,l),u=i.mul(h,d),u=i.add(u,u),u=i.add(u,u),new Z(c,a,u)}add(t){I(t);const{X:e,Y:r,Z:n}=this,{X:o,Y:s,Z:c}=t;let a=i.ZERO,u=i.ZERO,l=i.ZERO;const d=f.a,h=i.mul(f.b,bt);let w=i.mul(e,o),g=i.mul(r,s),m=i.mul(n,c),y=i.add(e,r),p=i.add(o,s);y=i.mul(y,p),p=i.add(w,g),y=i.sub(y,p),p=i.add(e,n);let E=i.add(o,c);return p=i.mul(p,E),E=i.add(w,m),p=i.sub(p,E),E=i.add(r,n),a=i.add(s,c),E=i.mul(E,a),a=i.add(g,m),E=i.sub(E,a),l=i.mul(d,p),a=i.mul(h,m),l=i.add(a,l),a=i.sub(g,l),l=i.add(g,l),u=i.mul(a,l),g=i.add(w,w),g=i.add(g,w),m=i.mul(d,m),p=i.mul(h,p),g=i.add(g,m),m=i.sub(w,m),m=i.mul(d,m),p=i.add(p,m),w=i.mul(g,p),u=i.add(u,w),w=i.mul(E,p),a=i.mul(y,a),a=i.sub(a,w),w=i.mul(y,g),l=i.mul(E,l),l=i.add(l,w),new Z(a,u,l)}subtract(t){return this.add(t.negate())}is0(){return this.equals(Z.ZERO)}multiply(t){const{endo:e}=r;if(!s.isValidNot0(t))throw new Error("invalid scalar: out of range");let n,o;const i=t=>V.cached(this,t,t=>et(Z,t));if(e){const{k1neg:r,k1:s,k2neg:f,k2:c}=N(t),{p:a,f:u}=i(s),{p:l,f:d}=i(c);o=u.add(d),n=A(e.beta,a,l,r,f)}else{const{p:e,f:r}=i(t);n=e,o=r}return et(Z,[n,o])[0]}multiplyUnsafe(t){const{endo:e}=r,n=this;if(!s.isValid(t))throw new Error("invalid scalar: out of range");if(t===yt||n.is0())return Z.ZERO;if(t===pt)return n;if(V.hasCache(this))return this.multiply(t);if(e){const{k1neg:r,k1:o,k2neg:i,k2:s}=N(t),{p1:f,p2:c}=function(t,e,r,n){let o=e,i=t.ZERO,s=t.ZERO;for(;r>J||n>J;)r&Q&&(i=i.add(o)),n&Q&&(s=s.add(o)),o=o.double(),r>>=Q,n>>=Q;return{p1:i,p2:s}}(Z,n,o,s);return A(e.beta,f,c,r,i)}return V.unsafe(n,t)}multiplyAndAddUnsafe(t,e,r){const n=this.multiplyUnsafe(e).add(t.multiplyUnsafe(r));return n.is0()?void 0:n}toAffine(t){return q(this,t)}isTorsionFree(){const{isTorsionFree:t}=r;return c===pt||(t?t(Z,this):V.unsafe(this,a).is0())}clearCofactor(){const{clearCofactor:t}=r;return c===pt?this:t?t(Z,this):this.multiplyUnsafe(c)}isSmallOrder(){return this.multiplyUnsafe(c).is0()}toBytes(t=!0){return d(t,"isCompressed"),this.assertValidity(),g(Z,this,t)}toHex(e=!0){return t(this.toBytes(e))}toString(){return`<Point ${this.is0()?"ZERO":this.toHex()}>`}get px(){return this.X}get py(){return this.X}get pz(){return this.Z}toRawBytes(t=!0){return this.toBytes(t)}_setWindowSize(t){this.precompute(t)}static normalizeZ(t){return et(Z,t)}static msm(t,e){return ut(Z,s,t,e)}static fromPrivateKey(t){return Z.BASE.multiply(vt(s,t))}}Z.BASE=new Z(f.Gx,f.Gy,i.ONE),Z.ZERO=new Z(i.ZERO,i.ONE,i.ZERO),Z.Fp=i,Z.Fn=s;const U=s.BITS,V=new at(Z,r.endo?Math.ceil(U/2):U);return Z.BASE.precompute(8),Z}function xt(t){return Uint8Array.of(t?2:3)}function Rt(t,e){return{secretKey:e.BYTES,publicKey:1+t.BYTES,publicKeyUncompressed:1+2*t.BYTES,publicKeyHasPrefix:!0,signature:2*e.BYTES}}function St(t,e={}){const{Fn:r}=t,n=e.randomBytes||f,o=Object.assign(Rt(t.Fp,r),{seed:W(r.ORDER)});function i(t){try{return!!vt(r,t)}catch(e){return!1}}function s(t=n(o.seed)){return function(t,e,r=!1){const n=t.length,o=X(e),i=W(e);if(n<16||n<i||n>1024)throw new Error("expected "+i+"-1024 bytes of input, got "+n);const s=C(r?y(t):m(t),e-N)+N;return r?E(s,o):p(s,o)}(h(t,o.seed,"seed"),r.ORDER)}function c(e,n=!0){return t.BASE.multiply(vt(r,e)).toBytes(n)}function a(e){if("bigint"==typeof e)return!1;if(e instanceof t)return!0;const{secretKey:n,publicKey:i,publicKeyUncompressed:s}=o;if(r.allowedLengths||n===i)return;const f=b("key",e).length;return f===i||f===s}const u={isValidSecretKey:i,isValidPublicKey:function(e,r){const{publicKey:n,publicKeyUncompressed:i}=o;try{const o=e.length;return(!0!==r||o===n)&&((!1!==r||o===i)&&!!t.fromBytes(e))}catch(s){return!1}},randomSecretKey:s,isValidPrivateKey:i,randomPrivateKey:s,normPrivateKeyToScalar:t=>vt(r,t),precompute:(e=8,r=t.BASE)=>r.precompute(e,!1)};return Object.freeze({getPublicKey:c,getSharedSecret:function(e,n,o=!0){if(!0===a(e))throw new Error("first arg must be private key");if(!1===a(n))throw new Error("second arg must be public key");const i=vt(r,e);return t.fromHex(n).multiply(i).toBytes(o)},keygen:function(t){const e=s(t);return{secretKey:e,publicKey:c(e)}},Point:t,utils:u,lengths:o})}function It(n,i,a={}){s(i),R(a,{},{hmac:"function",lowS:"boolean",randomBytes:"function",bits2int:"function",bits2int_modN:"function"});const u=a.randomBytes||f,l=a.hmac||((t,...e)=>c(i,t,o(...e))),{Fp:d,Fn:w}=n,{ORDER:g,BITS:y}=w,{keygen:p,getPublicKey:E,getSharedSecret:B,utils:O,lengths:S}=St(n,a),I={prehash:!1,lowS:"boolean"==typeof a.lowS&&a.lowS,format:void 0,extraEntropy:!1},N="compact";function q(t){return t>g>>pt}function F(t,e){if(!w.isValidNot0(e))throw new Error(`invalid signature ${t}: out of range 1..Point.Fn.ORDER`);return e}class A{constructor(t,e,r){this.r=F("r",t),this.s=F("s",e),null!=r&&(this.recovery=r),Object.freeze(this)}static fromBytes(t,e=N){let r;if(function(t,e){ht(e);const r=S.signature;h(t,"compact"===e?r:"recovered"===e?r+1:void 0,`${e} signature`)}(t,e),"der"===e){const{r:e,s:r}=mt.toSig(h(t));return new A(e,r)}"recovered"===e&&(r=t[0],e="compact",t=t.subarray(1));const n=w.BYTES,o=t.subarray(0,n),i=t.subarray(n,2*n);return new A(w.fromBytes(o),w.fromBytes(i),r)}static fromHex(t,e){return this.fromBytes(r(t),e)}addRecoveryBit(t){return new A(this.r,this.s,t)}recoverPublicKey(t){const e=d.ORDER,{r:r,s:i,recovery:s}=this;if(null==s||![0,1,2,3].includes(s))throw new Error("recovery id invalid");if(g*Et<e&&s>1)throw new Error("recovery id is ambiguous for h>1 curve");const f=2===s||3===s?r+g:r;if(!d.isValid(f))throw new Error("recovery id 2 or 3 invalid");const c=d.toBytes(f),a=n.fromBytes(o(xt(!(1&s)),c)),u=w.inv(f),l=U(b("msgHash",t)),h=w.create(-l*u),m=w.create(i*u),y=n.BASE.multiplyUnsafe(h).add(a.multiplyUnsafe(m));if(y.is0())throw new Error("point at infinify");return y.assertValidity(),y}hasHighS(){return q(this.s)}toBytes(t=N){if(ht(t),"der"===t)return r(mt.hexFromSig(this));const e=w.toBytes(this.r),n=w.toBytes(this.s);if("recovered"===t){if(null==this.recovery)throw new Error("recovery bit must be present");return o(Uint8Array.of(this.recovery),e,n)}return o(e,n)}toHex(e){return t(this.toBytes(e))}assertValidity(){}static fromCompact(t){return A.fromBytes(b("sig",t),"compact")}static fromDER(t){return A.fromBytes(b("sig",t),"der")}normalizeS(){return this.hasHighS()?new A(this.r,w.neg(this.s),this.recovery):this}toDERRawBytes(){return this.toBytes("der")}toDERHex(){return t(this.toBytes("der"))}toCompactRawBytes(){return this.toBytes("compact")}toCompactHex(){return t(this.toBytes("compact"))}}const Z=a.bits2int||function(t){if(t.length>8192)throw new Error("input is too large");const e=m(t),r=8*t.length-y;return r>0?e>>BigInt(r):e},U=a.bits2int_modN||function(t){return w.create(Z(t))},V=x(y);function K(t){return v("num < 2^"+y,t,yt,V),w.toBytes(t)}function P(t,e){return h(t,void 0,"message"),e?h(i(t),void 0,"prehashed message"):t}return Object.freeze({keygen:p,getPublicKey:E,getSharedSecret:B,utils:O,lengths:S,Point:n,sign:function(t,e,r={}){t=b("message",t);const{seed:s,k2sig:f}=function(t,e,r){if(["recovered","canonical"].some(t=>t in r))throw new Error("sign() legacy options not supported");const{lowS:i,prehash:s,extraEntropy:f}=wt(r,I);t=P(t,s);const c=U(t),a=vt(w,e),l=[K(a),K(c)];if(null!=f&&!1!==f){const t=!0===f?u(S.secretKey):f;l.push(b("extraEntropy",t))}const d=o(...l),h=c;return{seed:d,k2sig:function(t){const e=Z(t);if(!w.isValidNot0(e))return;const r=w.inv(e),o=n.BASE.multiply(e).toAffine(),s=w.create(o.x);if(s===yt)return;const f=w.create(r*w.create(h+s*a));if(f===yt)return;let c=(o.x===s?0:2)|Number(o.y&pt),u=f;return i&&q(f)&&(u=w.neg(f),c^=1),new A(s,u,c)}}}(t,e,r);return function(t,e,r){if("number"!=typeof t||t<2)throw new Error("hashLen must be a number");if("number"!=typeof e||e<2)throw new Error("qByteLen must be a number");if("function"!=typeof r)throw new Error("hmacFn must be a function");const n=t=>new Uint8Array(t),i=t=>Uint8Array.of(t);let s=n(t),f=n(t),c=0;const a=()=>{s.fill(1),f.fill(0),c=0},u=(...t)=>r(f,s,...t),l=(t=n(0))=>{f=u(i(0),t),s=u(),0!==t.length&&(f=u(i(1),t),s=u())},d=()=>{if(c++>=1e3)throw new Error("drbg: tried 1000 values");let t=0;const r=[];for(;t<e;){s=u();const e=s.slice();r.push(e),t+=s.length}return o(...r)};return(t,e)=>{let r;for(a(),l(t);!(r=e(d()));)l();return a(),r}}(i.outputLen,w.BYTES,l)(s,f)},verify:function(t,r,o,i={}){const{lowS:s,prehash:f,format:c}=wt(i,I);if(o=b("publicKey",o),r=P(b("message",r),f),"strict"in i)throw new Error("options.strict was renamed to lowS");const a=void 0===c?function(t){let r;const n="string"==typeof t||e(t),o=!n&&null!==t&&"object"==typeof t&&"bigint"==typeof t.r&&"bigint"==typeof t.s;if(!n&&!o)throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");if(o)r=new A(t.r,t.s);else if(n){try{r=A.fromBytes(b("sig",t),"der")}catch(i){if(!(i instanceof mt.Err))throw i}if(!r)try{r=A.fromBytes(b("sig",t),"compact")}catch(s){return!1}}return r||!1}(t):A.fromBytes(b("sig",t),c);if(!1===a)return!1;try{const t=n.fromBytes(o);if(s&&a.hasHighS())return!1;const{r:e,s:i}=a,f=U(r),c=w.inv(i),u=w.create(f*c),l=w.create(e*c),d=n.BASE.multiplyUnsafe(u).add(t.multiplyUnsafe(l));if(d.is0())return!1;return w.create(d.x)===e}catch(u){return!1}},recoverPublicKey:function(t,e,r={}){const{prehash:n}=wt(r,I);return e=P(e,n),A.fromBytes(t,"recovered").recoverPublicKey(e).toBytes()},Signature:A,hash:i})}function Nt(t){const{CURVE:e,curveOpts:r}=function(t){const e={a:t.a,b:t.b,p:t.Fp.ORDER,n:t.n,h:t.h,Gx:t.Gx,Gy:t.Gy},r=t.Fp;let n=t.allowedPrivateKeyLengths?Array.from(new Set(t.allowedPrivateKeyLengths.map(t=>Math.ceil(t/2)))):void 0;return{CURVE:e,curveOpts:{Fp:r,Fn:_(e.n,{BITS:t.nBitLength,allowedLengths:n,modFromBytes:t.wrapPrivateKey}),allowInfinityPoint:t.allowInfinityPoint,endo:t.endo,isTorsionFree:t.isTorsionFree,clearCofactor:t.clearCofactor,fromBytes:t.fromBytes,toBytes:t.toBytes}}}(t),n={hmac:t.hmac,randomBytes:t.randomBytes,lowS:t.lowS,bits2int:t.bits2int,bits2int_modN:t.bits2int_modN};return{CURVE:e,curveOpts:r,hash:t.hash,ecdsaOpts:n}}function qt(t){const{CURVE:e,curveOpts:r,hash:n,ecdsaOpts:o}=Nt(t);return function(t,e){const r=e.Point;return Object.assign({},e,{ProjectivePoint:r,CURVE:Object.assign({},t,G(r.Fn.ORDER,r.Fn.BITS))})}(t,It(Ot(e,r),n,o))}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const Ft={p:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),n:BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),h:BigInt(1),a:BigInt(0),b:BigInt(7),Gx:BigInt("0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"),Gy:BigInt("0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8")},At={beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),basises:[[BigInt("0x3086d221a7d46bcde86c90e49284eb15"),-BigInt("0xe4437ed6010e88286f547fa90abfe4c3")],[BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),BigInt("0x3086d221a7d46bcde86c90e49284eb15")]]},Zt=BigInt(2);const Ut=_(Ft.p,{sqrt:function(t){const e=Ft.p,r=BigInt(3),n=BigInt(6),o=BigInt(11),i=BigInt(22),s=BigInt(23),f=BigInt(44),c=BigInt(88),a=t*t*t%e,u=a*a*t%e,l=k(u,r,e)*u%e,d=k(l,r,e)*u%e,h=k(d,Zt,e)*a%e,w=k(h,o,e)*h%e,g=k(w,i,e)*w%e,m=k(g,f,e)*g%e,y=k(m,c,e)*m%e,p=k(y,f,e)*g%e,E=k(p,r,e)*u%e,b=k(E,s,e)*w%e,B=k(b,n,e)*a%e,v=k(B,Zt,e);if(!Ut.eql(Ut.sqr(v),t))throw new Error("Cannot find square root");return v}}),Vt=function(t,e){const r=e=>qt({...t,hash:e});return{...r(e),create:r}}({...Ft,Fp:Ut,lowS:!0,endo:At},a);export{Vt as secp256k1};
